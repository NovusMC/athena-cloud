// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.1
// source: protocol.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Service_Type int32

const (
	Service_TYPE_UNKNOWN Service_Type = 0
	Service_TYPE_PROXY   Service_Type = 1
	Service_TYPE_SERVER  Service_Type = 2
)

// Enum value maps for Service_Type.
var (
	Service_Type_name = map[int32]string{
		0: "TYPE_UNKNOWN",
		1: "TYPE_PROXY",
		2: "TYPE_SERVER",
	}
	Service_Type_value = map[string]int32{
		"TYPE_UNKNOWN": 0,
		"TYPE_PROXY":   1,
		"TYPE_SERVER":  2,
	}
)

func (x Service_Type) Enum() *Service_Type {
	p := new(Service_Type)
	*p = x
	return p
}

func (x Service_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Service_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[0].Descriptor()
}

func (Service_Type) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[0]
}

func (x Service_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Service_Type.Descriptor instead.
func (Service_Type) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{0, 0}
}

type Service_State int32

const (
	Service_STATE_UNKNOWN   Service_State = 0
	Service_STATE_PENDING   Service_State = 1
	Service_STATE_SCHEDULED Service_State = 2
	Service_STATE_ONLINE    Service_State = 3
	Service_STATE_STOPPING  Service_State = 4
	Service_STATE_OFFLINE   Service_State = 5
)

// Enum value maps for Service_State.
var (
	Service_State_name = map[int32]string{
		0: "STATE_UNKNOWN",
		1: "STATE_PENDING",
		2: "STATE_SCHEDULED",
		3: "STATE_ONLINE",
		4: "STATE_STOPPING",
		5: "STATE_OFFLINE",
	}
	Service_State_value = map[string]int32{
		"STATE_UNKNOWN":   0,
		"STATE_PENDING":   1,
		"STATE_SCHEDULED": 2,
		"STATE_ONLINE":    3,
		"STATE_STOPPING":  4,
		"STATE_OFFLINE":   5,
	}
)

func (x Service_State) Enum() *Service_State {
	p := new(Service_State)
	*p = x
	return p
}

func (x Service_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Service_State) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[1].Descriptor()
}

func (Service_State) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[1]
}

func (x Service_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Service_State.Descriptor instead.
func (Service_State) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{0, 1}
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type   Service_Type  `protobuf:"varint,2,opt,name=type,proto3,enum=protocol.Service_Type" json:"type,omitempty"`
	State  Service_State `protobuf:"varint,3,opt,name=state,proto3,enum=protocol.Service_State" json:"state,omitempty"`
	Memory int32         `protobuf:"varint,4,opt,name=memory,proto3" json:"memory,omitempty"`
	Port   int32         `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	Group  string        `protobuf:"bytes,6,opt,name=group,proto3" json:"group,omitempty"`
	Slave  string        `protobuf:"bytes,7,opt,name=slave,proto3" json:"slave,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	mi := &file_protocol_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Service) GetType() Service_Type {
	if x != nil {
		return x.Type
	}
	return Service_TYPE_UNKNOWN
}

func (x *Service) GetState() Service_State {
	if x != nil {
		return x.State
	}
	return Service_STATE_UNKNOWN
}

func (x *Service) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *Service) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Service) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Service) GetSlave() string {
	if x != nil {
		return x.Slave
	}
	return ""
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type        Service_Type `protobuf:"varint,2,opt,name=type,proto3,enum=protocol.Service_Type" json:"type,omitempty"`
	MinServices int32        `protobuf:"varint,3,opt,name=min_services,json=minServices,proto3" json:"min_services,omitempty"`
	MaxServices int32        `protobuf:"varint,4,opt,name=max_services,json=maxServices,proto3" json:"max_services,omitempty"`
	Memory      int32        `protobuf:"varint,5,opt,name=memory,proto3" json:"memory,omitempty"`
	StartPort   int32        `protobuf:"varint,6,opt,name=start_port,json=startPort,proto3" json:"start_port,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	mi := &file_protocol_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetType() Service_Type {
	if x != nil {
		return x.Type
	}
	return Service_TYPE_UNKNOWN
}

func (x *Group) GetMinServices() int32 {
	if x != nil {
		return x.MinServices
	}
	return 0
}

func (x *Group) GetMaxServices() int32 {
	if x != nil {
		return x.MaxServices
	}
	return 0
}

func (x *Group) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *Group) GetStartPort() int32 {
	if x != nil {
		return x.StartPort
	}
	return 0
}

type Envelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *anypb.Any `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_protocol_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *Envelope) GetPayload() *anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ServiceEnvelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName string     `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Payload     *anypb.Any `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ServiceEnvelope) Reset() {
	*x = ServiceEnvelope{}
	mi := &file_protocol_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceEnvelope) ProtoMessage() {}

func (x *ServiceEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceEnvelope.ProtoReflect.Descriptor instead.
func (*ServiceEnvelope) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceEnvelope) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ServiceEnvelope) GetPayload() *anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

type PacketAuthenticate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlaveName string `protobuf:"bytes,1,opt,name=slave_name,json=slaveName,proto3" json:"slave_name,omitempty"`
	SecretKey string `protobuf:"bytes,2,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	Memory    int32  `protobuf:"varint,3,opt,name=memory,proto3" json:"memory,omitempty"`
}

func (x *PacketAuthenticate) Reset() {
	*x = PacketAuthenticate{}
	mi := &file_protocol_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketAuthenticate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketAuthenticate) ProtoMessage() {}

func (x *PacketAuthenticate) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketAuthenticate.ProtoReflect.Descriptor instead.
func (*PacketAuthenticate) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *PacketAuthenticate) GetSlaveName() string {
	if x != nil {
		return x.SlaveName
	}
	return ""
}

func (x *PacketAuthenticate) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *PacketAuthenticate) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

type PacketAuthSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PacketAuthSuccess) Reset() {
	*x = PacketAuthSuccess{}
	mi := &file_protocol_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketAuthSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketAuthSuccess) ProtoMessage() {}

func (x *PacketAuthSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketAuthSuccess.ProtoReflect.Descriptor instead.
func (*PacketAuthSuccess) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{5}
}

type PacketAuthFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PacketAuthFailed) Reset() {
	*x = PacketAuthFailed{}
	mi := &file_protocol_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketAuthFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketAuthFailed) ProtoMessage() {}

func (x *PacketAuthFailed) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketAuthFailed.ProtoReflect.Descriptor instead.
func (*PacketAuthFailed) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{6}
}

func (x *PacketAuthFailed) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PacketScheduleServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service *Service `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Group   *Group   `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *PacketScheduleServiceRequest) Reset() {
	*x = PacketScheduleServiceRequest{}
	mi := &file_protocol_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketScheduleServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketScheduleServiceRequest) ProtoMessage() {}

func (x *PacketScheduleServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketScheduleServiceRequest.ProtoReflect.Descriptor instead.
func (*PacketScheduleServiceRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{7}
}

func (x *PacketScheduleServiceRequest) GetService() *Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *PacketScheduleServiceRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type PacketServiceStartFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Message     string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PacketServiceStartFailed) Reset() {
	*x = PacketServiceStartFailed{}
	mi := &file_protocol_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketServiceStartFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketServiceStartFailed) ProtoMessage() {}

func (x *PacketServiceStartFailed) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketServiceStartFailed.ProtoReflect.Descriptor instead.
func (*PacketServiceStartFailed) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{8}
}

func (x *PacketServiceStartFailed) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *PacketServiceStartFailed) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PacketServiceStopped struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
}

func (x *PacketServiceStopped) Reset() {
	*x = PacketServiceStopped{}
	mi := &file_protocol_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketServiceStopped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketServiceStopped) ProtoMessage() {}

func (x *PacketServiceStopped) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketServiceStopped.ProtoReflect.Descriptor instead.
func (*PacketServiceStopped) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{9}
}

func (x *PacketServiceStopped) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

type PacketServiceOnline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Port        int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *PacketServiceOnline) Reset() {
	*x = PacketServiceOnline{}
	mi := &file_protocol_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketServiceOnline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketServiceOnline) ProtoMessage() {}

func (x *PacketServiceOnline) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketServiceOnline.ProtoReflect.Descriptor instead.
func (*PacketServiceOnline) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{10}
}

func (x *PacketServiceOnline) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *PacketServiceOnline) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type PacketServiceConnect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *PacketServiceConnect) Reset() {
	*x = PacketServiceConnect{}
	mi := &file_protocol_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketServiceConnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketServiceConnect) ProtoMessage() {}

func (x *PacketServiceConnect) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketServiceConnect.ProtoReflect.Descriptor instead.
func (*PacketServiceConnect) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{11}
}

func (x *PacketServiceConnect) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type PacketStopService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
}

func (x *PacketStopService) Reset() {
	*x = PacketStopService{}
	mi := &file_protocol_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketStopService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketStopService) ProtoMessage() {}

func (x *PacketStopService) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketStopService.ProtoReflect.Descriptor instead.
func (*PacketStopService) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{12}
}

func (x *PacketStopService) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

type PacketProxyRegisterServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerName string `protobuf:"bytes,1,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	Host       string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port       int32  `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *PacketProxyRegisterServer) Reset() {
	*x = PacketProxyRegisterServer{}
	mi := &file_protocol_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketProxyRegisterServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketProxyRegisterServer) ProtoMessage() {}

func (x *PacketProxyRegisterServer) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketProxyRegisterServer.ProtoReflect.Descriptor instead.
func (*PacketProxyRegisterServer) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{13}
}

func (x *PacketProxyRegisterServer) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *PacketProxyRegisterServer) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *PacketProxyRegisterServer) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type PacketProxyUnregisterServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerName string `protobuf:"bytes,1,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
}

func (x *PacketProxyUnregisterServer) Reset() {
	*x = PacketProxyUnregisterServer{}
	mi := &file_protocol_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketProxyUnregisterServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketProxyUnregisterServer) ProtoMessage() {}

func (x *PacketProxyUnregisterServer) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketProxyUnregisterServer.ProtoReflect.Descriptor instead.
func (*PacketProxyUnregisterServer) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{14}
}

func (x *PacketProxyUnregisterServer) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

type PacketScreenLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line string `protobuf:"bytes,1,opt,name=line,proto3" json:"line,omitempty"`
}

func (x *PacketScreenLine) Reset() {
	*x = PacketScreenLine{}
	mi := &file_protocol_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketScreenLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketScreenLine) ProtoMessage() {}

func (x *PacketScreenLine) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketScreenLine.ProtoReflect.Descriptor instead.
func (*PacketScreenLine) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{15}
}

func (x *PacketScreenLine) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

type PacketAttachScreen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
}

func (x *PacketAttachScreen) Reset() {
	*x = PacketAttachScreen{}
	mi := &file_protocol_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketAttachScreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketAttachScreen) ProtoMessage() {}

func (x *PacketAttachScreen) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketAttachScreen.ProtoReflect.Descriptor instead.
func (*PacketAttachScreen) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{16}
}

func (x *PacketAttachScreen) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

type PacketDetachScreen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
}

func (x *PacketDetachScreen) Reset() {
	*x = PacketDetachScreen{}
	mi := &file_protocol_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketDetachScreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketDetachScreen) ProtoMessage() {}

func (x *PacketDetachScreen) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketDetachScreen.ProtoReflect.Descriptor instead.
func (*PacketDetachScreen) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{17}
}

func (x *PacketDetachScreen) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

type PacketExecuteServiceCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Command     string `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *PacketExecuteServiceCommand) Reset() {
	*x = PacketExecuteServiceCommand{}
	mi := &file_protocol_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketExecuteServiceCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketExecuteServiceCommand) ProtoMessage() {}

func (x *PacketExecuteServiceCommand) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketExecuteServiceCommand.ProtoReflect.Descriptor instead.
func (*PacketExecuteServiceCommand) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{18}
}

func (x *PacketExecuteServiceCommand) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *PacketExecuteServiceCommand) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

var File_protocol_proto protoreflect.FileDescriptor

var file_protocol_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x03, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x22, 0x39, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x58, 0x59,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45,
	0x52, 0x10, 0x02, 0x22, 0x7b, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x11, 0x0a, 0x0d,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x43, 0x48, 0x45,
	0x44, 0x55, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x11, 0x0a,
	0x0d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x05,
	0x22, 0xc4, 0x01, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x3a, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0x64, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x6a, 0x0a, 0x12, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0x13, 0x0a, 0x11, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x2c, 0x0a, 0x10, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x72, 0x0a, 0x1c, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x57, 0x0a, 0x18,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x39, 0x0a, 0x14, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x4c, 0x0a, 0x13, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x28,
	0x0a, 0x14, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x36, 0x0a, 0x11, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x64, 0x0a, 0x19, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x3e, 0x0a, 0x1b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x10, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x37,
	0x0a, 0x12, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x12, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x5a, 0x0a, 0x1b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x25, 0x0a, 0x18,
	0x65, 0x75, 0x2e, 0x6e, 0x6f, 0x76, 0x75, 0x73, 0x6d, 0x63, 0x2e, 0x61, 0x74, 0x68, 0x65, 0x6e,
	0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocol_proto_rawDescOnce sync.Once
	file_protocol_proto_rawDescData = file_protocol_proto_rawDesc
)

func file_protocol_proto_rawDescGZIP() []byte {
	file_protocol_proto_rawDescOnce.Do(func() {
		file_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_proto_rawDescData)
	})
	return file_protocol_proto_rawDescData
}

var file_protocol_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_protocol_proto_goTypes = []any{
	(Service_Type)(0),                    // 0: protocol.Service.Type
	(Service_State)(0),                   // 1: protocol.Service.State
	(*Service)(nil),                      // 2: protocol.Service
	(*Group)(nil),                        // 3: protocol.Group
	(*Envelope)(nil),                     // 4: protocol.Envelope
	(*ServiceEnvelope)(nil),              // 5: protocol.ServiceEnvelope
	(*PacketAuthenticate)(nil),           // 6: protocol.PacketAuthenticate
	(*PacketAuthSuccess)(nil),            // 7: protocol.PacketAuthSuccess
	(*PacketAuthFailed)(nil),             // 8: protocol.PacketAuthFailed
	(*PacketScheduleServiceRequest)(nil), // 9: protocol.PacketScheduleServiceRequest
	(*PacketServiceStartFailed)(nil),     // 10: protocol.PacketServiceStartFailed
	(*PacketServiceStopped)(nil),         // 11: protocol.PacketServiceStopped
	(*PacketServiceOnline)(nil),          // 12: protocol.PacketServiceOnline
	(*PacketServiceConnect)(nil),         // 13: protocol.PacketServiceConnect
	(*PacketStopService)(nil),            // 14: protocol.PacketStopService
	(*PacketProxyRegisterServer)(nil),    // 15: protocol.PacketProxyRegisterServer
	(*PacketProxyUnregisterServer)(nil),  // 16: protocol.PacketProxyUnregisterServer
	(*PacketScreenLine)(nil),             // 17: protocol.PacketScreenLine
	(*PacketAttachScreen)(nil),           // 18: protocol.PacketAttachScreen
	(*PacketDetachScreen)(nil),           // 19: protocol.PacketDetachScreen
	(*PacketExecuteServiceCommand)(nil),  // 20: protocol.PacketExecuteServiceCommand
	(*anypb.Any)(nil),                    // 21: google.protobuf.Any
}
var file_protocol_proto_depIdxs = []int32{
	0,  // 0: protocol.Service.type:type_name -> protocol.Service.Type
	1,  // 1: protocol.Service.state:type_name -> protocol.Service.State
	0,  // 2: protocol.Group.type:type_name -> protocol.Service.Type
	21, // 3: protocol.Envelope.payload:type_name -> google.protobuf.Any
	21, // 4: protocol.ServiceEnvelope.payload:type_name -> google.protobuf.Any
	2,  // 5: protocol.PacketScheduleServiceRequest.service:type_name -> protocol.Service
	3,  // 6: protocol.PacketScheduleServiceRequest.group:type_name -> protocol.Group
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_protocol_proto_init() }
func file_protocol_proto_init() {
	if File_protocol_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protocol_proto_goTypes,
		DependencyIndexes: file_protocol_proto_depIdxs,
		EnumInfos:         file_protocol_proto_enumTypes,
		MessageInfos:      file_protocol_proto_msgTypes,
	}.Build()
	File_protocol_proto = out.File
	file_protocol_proto_rawDesc = nil
	file_protocol_proto_goTypes = nil
	file_protocol_proto_depIdxs = nil
}
